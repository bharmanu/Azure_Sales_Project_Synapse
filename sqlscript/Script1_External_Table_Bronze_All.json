{
	"name": "Script1_External_Table_Bronze_All",
	"properties": {
		"folder": {
			"name": "Taxi_Data_Table_Scripts"
		},
		"content": {
			"query": "CREATE DATABASE nyc_taxi_ldw\nGO\n\nALTER DATABASE nyc_taxi_ldw COLLATE Latin1_General_100_BIN2_UTF8\nGO\n\nUSE nyc_taxi_ldw\nGO\n\nCREATE SCHEMA bronze\nGO\n\nCREATE SCHEMA silver\nGO\n\nCREATE SCHEMA gold\nGO\n\n--New data source for external table, only till main container\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'nyc_taxi_src')\n    CREATE EXTERNAL DATA SOURCE nyc_taxi_src\n    WITH\n    (    LOCATION = 'https://synapsestoragemanu.dfs.core.windows.net/taxi-data'\n    );\n\n--Check external data source\nSELECT * FROM sys.external_data_sources\n\n\n--CSV with parser version 2.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='csv_file_format')\n  CREATE EXTERNAL FILE FORMAT csv_file_format  \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = ','  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '2.0' )   \n      );\n\n--CSV with parser version 1.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='csv_file_format_pv1')\n  CREATE EXTERNAL FILE FORMAT csv_file_format_pv1 \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = ','  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '1.0' )   \n      );\n\n--TSV file format with parser version 2.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='tsv_file_format')\n  CREATE EXTERNAL FILE FORMAT tsv_file_format  \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = '\\t'  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '2.0' )   \n      );\n\n--TSV file format with parser version 1.0\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='tsv_file_format_pv1')\n  CREATE EXTERNAL FILE FORMAT tsv_file_format_pv1 \n  WITH (  \n      FORMAT_TYPE = DELIMITEDTEXT,\n      FORMAT_OPTIONS (  \n        FIELD_TERMINATOR = '\\t'  \n      , STRING_DELIMITER = '\"'\n      , First_Row = 2\n      , USE_TYPE_DEFAULT = FALSE \n      , Encoding = 'UTF8'\n      , PARSER_VERSION = '1.0' )   \n      );\n\n\n--parquet with SnappyCodec compression\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='parquet_file_format')\n  CREATE EXTERNAL FILE FORMAT parquet_file_format  \n  WITH (  \n        FORMAT_TYPE = PARQUET,  \n        DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'  \n       );\n\n--Delta with SnappyCodec compression (Delta is parquet with json log)\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name ='delta_file_format')\n  CREATE EXTERNAL FILE FORMAT delta_file_format  \n  WITH (  \n        FORMAT_TYPE = DELTA,  \n        DATA_COMPRESSION = 'org.apache.hadoop.io.compress.SnappyCodec'  \n       );\n\n--Check external file format\nSELECT * FROM sys.external_file_formats\n\n--Create External table\nIF OBJECT_ID('bronze.taxi_zone') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.taxi_zone;\n\nCREATE EXTERNAL TABLE bronze.taxi_zone\n    (   location_id SMALLINT ,\n        borough VARCHAR(15) ,\n        zone VARCHAR(50) ,\n        service_zone VARCHAR(15) )  \n    WITH (\n            LOCATION = 'Data/taxi_zone.csv',  \n            DATA_SOURCE = nyc_taxi_src,  \n            FILE_FORMAT = csv_file_format_pv1,\n            REJECT_VALUE = 10,\n            REJECTED_ROW_LOCATION = 'rejections/taxi_zone'\n    );\n\nSELECT * FROM bronze.taxi_zone;\n\n--Create calendar table\nIF OBJECT_ID('bronze.calendar') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.calendar;\n\nCREATE EXTERNAL TABLE bronze.calendar\n    (\n        date_key        INT,\n        date            DATE,\n        year            SMALLINT,\n        month           TINYINT,\n        day             TINYINT,\n        day_name        VARCHAR(10),\n        day_of_year     SMALLINT,\n        week_of_month   TINYINT,\n        week_of_year    TINYINT,\n        month_name      VARCHAR(10),\n        year_month      INT,\n        year_week       INT\n    )  \n    WITH (\n        LOCATION = 'Data/calendar.csv',  \n        DATA_SOURCE = nyc_taxi_src,  \n        FILE_FORMAT = csv_file_format_pv1,\n        REJECT_VALUE = 10,\n        REJECTED_ROW_LOCATION = 'rejections/calendar'\n    );\n\nSELECT * FROM bronze.calendar;\n\n--Create vendor table\nIF OBJECT_ID('bronze.vendor') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.vendor;\n\nCREATE EXTERNAL TABLE bronze.vendor\n    (\n        vendor_id       TINYINT,\n        vendor_name     VARCHAR(50)\n    )  \n    WITH (\n        LOCATION = 'Data/vendor.csv',  \n        DATA_SOURCE = nyc_taxi_src,  \n        FILE_FORMAT = csv_file_format_pv1,\n        REJECT_VALUE = 10,\n        REJECTED_ROW_LOCATION = 'rejections/vendor'\n    );\n\nSELECT * FROM bronze.vendor;\n\n--Create trip type table with TSV\nIF OBJECT_ID('bronze.trip_type') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.trip_type;\n\nCREATE EXTERNAL TABLE bronze.trip_type\n    (\n        trip_type       TINYINT,\n        trip_type_desc  VARCHAR(50)\n    )  \n    WITH (\n        LOCATION = 'Data/trip_type.tsv',  \n        DATA_SOURCE = nyc_taxi_src,  \n        FILE_FORMAT = tsv_file_format_pv1,\n        REJECT_VALUE = 10,\n        REJECTED_ROW_LOCATION = 'rejections/trip_type'\n    );\n\nSELECT * FROM bronze.trip_type;\n\n--Trip data green with Parquet\nIF OBJECT_ID('bronze.trip_data_green_csv') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.trip_data_green_csv;\n\nCREATE EXTERNAL TABLE bronze.trip_data_green_csv\n    (\n        VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n    )  \n    WITH (\n        LOCATION = 'Data/trip_data_green_parquet/**',\n        DATA_SOURCE = nyc_taxi_src,   \n        FILE_FORMAT = parquet_file_format\n    );\n\nSELECT * FROM bronze.trip_data_green_csv;  \n\n\n-- Create delta table\nIF OBJECT_ID('bronze.trip_data_green_delta') IS NOT NULL\n    DROP EXTERNAL TABLE bronze.trip_data_green_delta;\n\nCREATE EXTERNAL TABLE bronze.trip_data_green_delta\n    (\n        VendorID INT,\n        lpep_pickup_datetime datetime2(7),\n        lpep_dropoff_datetime datetime2(7),\n        store_and_fwd_flag CHAR(1),\n        RatecodeID INT,\n        PULocationID INT,\n        DOLocationID INT,\n        passenger_count INT,\n        trip_distance FLOAT,\n        fare_amount FLOAT,\n        extra FLOAT,\n        mta_tax FLOAT,\n        tip_amount FLOAT,\n        tolls_amount FLOAT,\n        ehail_fee INT,\n        improvement_surcharge FLOAT,\n        total_amount FLOAT,\n        payment_type INT,\n        trip_type INT,\n        congestion_surcharge FLOAT\n    )  \n    WITH (\n        LOCATION = 'Data/trip_data_green_delta',\n        DATA_SOURCE = nyc_taxi_src,   \n        FILE_FORMAT = delta_file_format\n    );\n\nselect * from bronze.trip_data_green_delta;    \n\n-- Create view using json\nDROP VIEW IF EXISTS bronze.vw_rate_code\nGO\n\nCREATE VIEW bronze.vw_rate_code\nAS\nSELECT rate_code_id, rate_code\n  FROM OPENROWSET(\n      BULK 'Data/rate_code.json',\n      DATA_SOURCE = 'nyc_taxi_src',\n      FORMAT = 'CSV',\n      FIELDTERMINATOR = '0x0b',\n      FIELDQUOTE = '0x0b',\n      ROWTERMINATOR = '0x0b'\n  )\n  WITH\n  (\n      jsonDoc NVARCHAR(MAX)\n  ) AS rate_code\n  CROSS APPLY OPENJSON(jsonDoc)\n  WITH(\n      rate_code_id TINYINT,\n      rate_code VARCHAR(20) \n  )\nGO\n\nSELECT * FROM bronze.vw_rate_code;\nGO\n",
			"metadata": {
				"language": "sql"
			},
			"currentConnection": {
				"databaseName": "nyc_taxi_ldw",
				"poolName": "Built-in"
			},
			"resultLimit": 5000
		},
		"type": "SqlQuery"
	}
}